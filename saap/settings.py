"""
Django settings for SAAP project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

from decouple import AutoConfig
from dj_database_url import parse as db_url
from easy_thumbnails.conf import Settings as thumbnail_settings
from unipath import Path
import os


config = AutoConfig()

BASE_DIR = Path(__file__).ancestor(1)
PROJECT_DIR = Path(__file__).ancestor(2)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['*']

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/login/?next='

# SAAP_APPS business apps in dependency order
SAAP_APPS = (
    'saap.core',
    'saap.cerimonial',

    # manter sempre como o último da lista de apps
    'saap.globalrules'

)

INITIAL_VALUE_FORMS_UF = config('INITIAL_VALUE_FORMS_UF', default='DF')
INITIAL_VALUE_FORMS_MUNICIPIO = config(
    'INITIAL_VALUE_FORMS_MUNICIPIO', default='Brasília')
INITIAL_VALUE_FORMS_CEP = config(
    'INITIAL_VALUE_FORMS_CEP', default='71608-000')

INSTALLED_APPS = (
    'django_admin_bootstrapped',  # must come before django.contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social.apps.django_app.default',

    # more
    'django_extensions',
    'djangobower',
    'bootstrap3',  # basically for django_admin_bootstrapped
    'crispy_forms',
    'easy_thumbnails',
    'image_cropping',
    'floppyforms',
    'sass_processor',
    'rest_framework',

    # 'haystack',
    # "elasticstack",

    'taggit',
    'modelcluster',
)

INSTALLED_APPS = INSTALLED_APPS + SAAP_APPS


# if DEBUG and 'debug_toolbar' not in INSTALLED_APPS:
#    INSTALLED_APPS += ('debug_toolbar',)


MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'PAGE_SIZE': 10
}

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

ROOT_URLCONF = 'saap.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['saap/templates'],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                "django.core.context_processors.media",
                "django.core.context_processors.static",
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',
                'saap.context_processors.areatrabalho',
            ],
            'debug': DEBUG,
            'loaders': ['django.template.loaders.filesystem.Loader',
                        'django.template.loaders.app_directories.Loader']
        },
    },
]

WSGI_APPLICATION = 'saap.wsgi.application'

AUTH_USER_MODEL = 'core.User'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
default_dburl = 'sqlite:///{}'.format(os.path.join(BASE_DIR, 'db.sqlite3'))
DATABASES = {
    'default': config(
        'DATABASE_URL',
        default=default_dburl,
        cast=db_url,
    )
}


AUTHENTICATION_BACKENDS = (
    'social.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'social.backends.google.GoogleOAuth2',
)

""" 'social.backends.twitter.TwitterOAuth' """

SOCIAL_AUTH_FACEBOOK_KEY = config(
    'SOCIAL_AUTH_FACEBOOK_KEY',
    default='',
    cast=str)
SOCIAL_AUTH_FACEBOOK_SECRET = config(
    'SOCIAL_AUTH_FACEBOOK_SECRET',
    default='',
    cast=str)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config(
    'SOCIAL_AUTH_GOOGLE_OAUTH2_KEY',
    default='',
    cast=str)
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config(
    'SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET',
    default='',
    cast=str)

SOCIAL_AUTH_TWITTER_KEY = config(
    'SOCIAL_AUTH_TWITTER_KEY',
    default='',
    cast=str)
SOCIAL_AUTH_TWITTER_SECRET = config(
    'SOCIAL_AUTH_TWITTER_SECRET',
    default='',
    cast=str)

USER_FIELDS = ('email',)
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,first_name,last_name,email'
}

SOCIAL_BACKEND_INFO = {
    'facebook': {
        'title': 'Facebook',
        'icon': 'img/icon-facebook.png',
    },
    'google-oauth2': {
        'title': 'Google',
        'icon': 'img/icon-google-plus.png',
    },
}
# twitter não está funcinando com a customização do auth.User,
# ao menos localmente... testar em um domínio válido.

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
LANGUAGE_CODE = 'pt-br'
LANGUAGES = (
    ('pt-br', u'Português'),
)

TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = False
USE_TZ = True
DATE_FORMAT = 'd/m/Y'
SHORT_DATE_FORMAT = 'd/m/Y'
DATE_INPUT_FORMATS = ('%d/%m/%Y', '%m-%d-%Y', '%Y-%m-%d')

LOCALE_PATHS = (
    BASE_DIR.child('locale'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = PROJECT_DIR.child("collected_static")
STATICFILES_DIRS = (BASE_DIR.child("static"),)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'djangobower.finders.BowerFinder',
    'sass_processor.finders.CssFinder',
)


MEDIA_ROOT = PROJECT_DIR.child("media")
MEDIA_URL = '/media/'

MEDIA_PROTECTED_ROOT = PROJECT_DIR.child("media_protected")

DAB_FIELD_RENDERER = \
    'django_admin_bootstrapped.renderers.BootstrapFieldRenderer'
CRISPY_TEMPLATE_PACK = 'bootstrap3'
CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap3'
CRISPY_FAIL_SILENTLY = not DEBUG

BOWER_COMPONENTS_ROOT = PROJECT_DIR.child("bower")
BOWER_INSTALLED_APPS = (
    'bootstrap-sass#3.3.6',
    'components-font-awesome#4.6.3',
    'tinymce#4.3.3',
    'jquery-ui#1.11.4',
    'jquery-runner#2.3.3',
    'jQuery-Mask-Plugin#1.13.4',
    'jsdiff#2.2.1',
    'https://github.com/hoarrd/drunken-parrot-flat-ui.git',
)

# Additional search paths for SASS files when using the @import statement
SASS_PROCESSOR_INCLUDE_DIRS = (
    BOWER_COMPONENTS_ROOT.child(
        'bower_components', 'bootstrap-sass', 'assets', 'stylesheets'),
)

# FIXME update cripy-forms and remove this
# hack to suppress many annoying warnings from crispy_forms
# see sapl.temp_suppress_crispy_form_warnings

# suprime texto de ajuda default do django-filter
FILTERS_HELP_TEXT_FILTER = False


THUMBNAIL_PROCESSORS = (
    'image_cropping.thumbnail_processors.crop_corners',
) + thumbnail_settings.THUMBNAIL_PROCESSORS

EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_HOST = config('EMAIL_HOST', default='', cast=str)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='', cast=str)
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='', cast=str)
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)

MAX_DOC_UPLOAD_SIZE = 5 * 1024 * 1024  # 5MB
MAX_IMAGE_UPLOAD_SIZE = 2 * 1024 * 1024  # 2MB

# django-haystack: http://django-haystack.readthedocs.org/
"""
hs_eng = 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine'
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': hs_eng,
        'URL': 'http://127.0.0.1:9200/',
        'INDEX_NAME': 'haystack',
    },
}
"""

"""HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': PROJECT_DIR.child('whoosh_index'),
    },
}
"""

"""HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'elasticstack.backends.ConfigurableElasticSearchEngine',
        'URL': 'http://127.0.0.1:9200/',
        'INDEX_NAME': 'haystack',
    },
}
"""

# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
# ELASTICSEARCH_DEFAULT_ANALYZER = "snowball"
